# coding=utf-8
from pytg.sender import Sender
from pytg.receiver import Receiver
from pytg.utils import coroutine
from collections import deque
from time import time, sleep
from getopt import getopt
import sys
import datetime
import re
import _thread
import random
from threading import Timer
from ArenaLog import ArenaLog

# username –∏–≥—Ä–æ–≤–æ–≥–æ –±–æ—Ç–∞
bot_username = 'CityWars_Bot'

# –≤–∞—à username –∏–ª–∏ username —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–ø—Ä–æ—Å—ã —ç—Ç–æ–º—É —Å–∫—Ä–∏–ø—Ç—É
admin_username = 'naeternitas'

# username –±–æ—Ç–∞ –∏/–∏–ª–∏ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–∫–∞–∑—ã
order_usernames = 'naeternitas'

# –∏–º—è –∑–∞–º–∫–∞
castle_name = 'yellow'

# –ø—É—Ç—å –∫ —Å–æ–∫–µ—Ç —Ñ–∞–π–ª—É
socket_path = ''

# —Ö–æ—Å—Ç —á—Ç–æ–± —Å–ª—É—à–∞—Ç—å telegram-cli
host = 'localhost'

# –ø–æ—Ä—Ç –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Å—à—É–ª–∞—Ç—å
port = 1338

#–ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ª–æ–≥–æ–º –∞—Ä–µ–Ω—ã
arena_attack_log_file = 'arena_attack_log.txt'

opts, args = getopt(sys.argv[1:], 'a:o:c:s:h:p:l', ['admin=', 'order=', 'castle=', 'socket=', 'host=', 'port=', 'log='])

for opt, arg in opts:
    if opt in ('-a', '--admin'):
        admin_username = arg
    elif opt in ('-o', '--order'):
        order_usernames = arg.split(',')
    elif opt in ('-c', '--castle'):
        castle_name = arg
    elif opt in ('-s', '--socket'):
        socket_path = arg
    elif opt in ('-h', '--host'):
        host = arg
    elif opt in ('-p', '--port'):
        port = int(arg)
    elif opt in ('-l', '--log'):
        arena_attack_log_file = arg

orders = {
    'red': 'üî¥ –ö—Ä–∞—Å–Ω—ã–π',
    'black': '‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π',
    'white': '‚ö™Ô∏è –ë–µ–ª—ã–π',
    'yellow': 'üåï –ñ–µ–ª—Ç—ã–π',
    'blue': 'üîµ –°–∏–Ω–∏–π',
    'lesnoi_fort': 'üå≤–õ–µ—Å–Ω–æ–π —Ñ–æ—Ä—Ç',
    'les': 'üå≤',
    'gorni_fort': '‚õ∞–ì–æ—Ä–Ω—ã–π —Ñ–æ—Ä—Ç',
    'gora': '‚õ∞',
    'cover': 'üõ° –ó–∞—â–∏—Ç–∞',
    'attack': '‚öî –ê—Ç–∞–∫–∞',
    'cover_symbol': 'üõ°',
    'hero': 'üë§ –ü—Ä–æ—Ñ–∏–ª—å',
    'corovan': '/go',
}




orders = {
    'red': 'üî¥ –ö—Ä–∞—Å–Ω—ã–π',
    'black': '‚ö´Ô∏è –ß—ë—Ä–Ω—ã–π',
    'white': '‚ö™Ô∏è –ë–µ–ª—ã–π',
    'yellow': 'üåï –ñ–µ–ª—Ç—ã–π',
    'blue': 'üîµ –°–∏–Ω–∏–π',
    'lesnoi_fort': 'üöë –õ–µ—á–∏–º',
    'les': 'üöë',
    'gorni_fort': 'üëÆ –ü–∞—Ç—Ä—É–ª–∏—Ä—É–µ–º',
    'gora': 'üëÆ',
    'cover': 'üõ° –ó–∞—â–∏—Ç–∞',
    'attack': 'üí• –ê—Ç–∞–∫–∞',
    'cover_symbol': 'üõ°',
    'hero': 'üë§ –ü—Ä–æ—Ñ–∏–ª—å',
    'corovan': '/go',
}

arena_cover = ['üõ°–≥–æ–ª–æ–≤—ã', 'üõ°–∫–æ—Ä–ø—É—Å–∞', 'üõ°–Ω–æ–≥']
arena_attack = ['üó°–≤ –≥–æ–ª–æ–≤—É', 'üó°–ø–æ –∫–æ—Ä–ø—É—Å—É', 'üó°–ø–æ –Ω–æ–≥–∞–º']
# –ø–æ–º–µ–Ω—è—Ç—å blue –Ω–∞ red, black, white, yellow –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–µ–≥–æ –∑–∞–º–∫–∞
castle = orders[castle_name]
# —Ç–µ–∫—É—â–∏–π –ø—Ä–∏–∫–∞–∑ –Ω–∞ –∞—Ç–∞–∫—É/–∑–∞—â–∏—Ç—É, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ–≥–¥–∞ –∑–∞—â–∏—Ç–∞, —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
current_order = {'time': 0, 'order': castle}

sender = Sender(sock=socket_path) if socket_path else Sender(host=host, port=port)
action_list = deque([])
log_list = deque([], maxlen=30)
lt_arena = 0
get_info_diff = 360
hero_message_id = ''
rival_name = ''
lt_command = ''
arena_log = ArenaLog()
arena_enemy_attack = []
arena_attack_strings = ['–≤ –≥–æ–ª–æ–≤—É', '–ø–æ –∫–æ—Ä–ø—É—Å—É', '–ø–æ –Ω–æ–≥–∞–º']

bot_enabled = True
arena_enabled = True
les_enabled = False
corovan_enabled = True
order_enabled = False
auto_def_enabled = False


@coroutine
def work_with_message(receiver):
    while True:
        msg = (yield)
        try:
            if msg['event'] == 'message' and msg['unread'] and 'text' in msg and msg['peer'] is not None:
                parse_text(msg['text'], msg['sender']['username'], msg['id'])
        except Exception as err:
            log('–û—à–∏–±–∫–∞ coroutine: {0}'.format(err))


def queue_worker():
    global get_info_diff
    global lt_command
    lt_info = 0
    while True:
        try:
            # if time() - last_command_time > time_between_commands:
            # last_command_time = time()
            if time() - lt_info > get_info_diff:
                lt_info = time()
                get_info_diff = random.randint(600, 1200)
                send_msg(bot_username, orders['hero'])
                continue

            if len(action_list):
                log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º ' + action_list[0])
                lt_command = action_list.popleft()
                send_msg(bot_username, lt_command)
            sleep_time = random.randint(2, 8)
            sleep(sleep_time)
        except Exception as err:
            log('–û—à–∏–±–∫–∞ –æ—á–µ—Ä–µ–¥–∏: {0}'.format(err))


def parse_text(text, username, message_id):
    global lt_arena
    global hero_message_id
    global bot_enabled
    global arena_enabled
    global les_enabled
    global corovan_enabled
    global order_enabled
    global auto_def_enabled
    global rival_name
    global lt_command
    if bot_enabled and username == bot_username:
        log('–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è')

        if '–ë–∏—Ç–≤–∞ –±–ª–∏–∑–∫–æ' in text or '–í–µ—Ç–µ—Ä –∑–∞–≤—ã–≤–∞–µ—Ç' in text :
            if lt_command:
                action_list.appendleft(lt_command)
                sleep_time = random.randint(45, 75)
                sleep(sleep_time)
                return

        if corovan_enabled and text.find(' /go') != -1:
            action_list.append(orders['corovan'])

        if orders['corovan'] in action_list and time() - current_order['time'] < 3600:
            update_order(current_order['order'])

        elif text.find('–ë–∏—Ç–≤–∞ –ø—è—Ç–∏ –∑–∞–º–∫–æ–≤ —á–µ—Ä–µ–∑') != -1:
            hero_message_id = message_id
            m = re.search('–î–æ –±–∏—Ç–≤—ã –æ—Å—Ç–∞–ª–æ—Å—å(?: ([0-9]+)—á){0,1}(?: ([0-9]+)){0,1}', text)
            if not m.group(1):
                if m.group(2) and int(m.group(2)) <= 5:
                    send_msg(admin_username, '–î–æ –±–∏—Ç–≤—ã ' + m.group(2) + ' –º–∏–Ω—É—Ç(—ã)!')
                    # –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
                    state = re.search('–°–æ—Å—Ç–æ—è–Ω–∏–µ:\\n(.*)$', text)
                    if auto_def_enabled and time() - current_order['time'] > 3600:
                        update_order(castle)
                    return
            log('–í—Ä–µ–º–µ–Ω–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
            # —Ç–µ–ø–µ—Ä—å —É–∑–Ω–∞–µ–º, —Å–∫–æ–ª—å–∫–æ —É –Ω–∞—Å –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –∏ –∑–æ–ª–æ—Ç–∞
            # m = re.search('–ó–æ–ª–æ—Ç–æ: (-*[0-9]+)\\n.*–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+) –∏–∑', text)
            gold = int(re.search('–î–µ–Ω—å–≥–∏: (-*[0-9]+)\\n', text).group(1))
            endurance = int(re.search('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: ([0-9]+)', text).group(1))
            log('–ó–æ–ª–æ—Ç–æ: {0}, –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å: {1}'.format(gold, endurance))
            if les_enabled and endurance > 0 and 'üöë –õ–µ—á–∏–º' not in action_list:
                action_list.append('üöë –õ–µ—á–∏–º')
            elif arena_enabled and gold >= 5 and 'üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞' not in action_list and time() - lt_arena > 3600:
                gotoArena()

        # Arena action

        elif arena_enabled:
            doArena(text)

    else:
        if bot_enabled and order_enabled and username in order_usernames:
            if text.find(orders['red']) != -1:
                update_order(orders['red'])
            elif text.find(orders['black']) != -1:
                update_order(orders['black'])
            elif text.find(orders['white']) != -1:
                update_order(orders['white'])
            elif text.find(orders['yellow']) != -1:
                update_order(orders['yellow'])
            elif text.find(orders['blue']) != -1:
                update_order(orders['blue'])
            elif text.find('üå≤') != -1:
                update_order(orders['lesnoi_fort'])
            elif text.find('‚õ∞') != -1:
                update_order(orders['gorni_fort'])
            elif text.find('üõ°') != -1:
                update_order(castle)

                # send_msg(admin_username, '–ü–æ–ª—É—á–∏–ª–∏ –∫–æ–º–∞–Ω–¥—É ' + current_order['order'] + ' –æ—Ç ' + username)

        if username == admin_username:
            if text == '#help':
                send_msg(admin_username, '\n'.join([
                    '#enable_bot - –í–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#disable_bot - –í—ã–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞',
                    '#enable_arena - –í–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#disable_arena - –í—ã–∫–ª—é—á–∏—Ç—å –∞—Ä–µ–Ω—É',
                    '#enable_les - –í–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#disable_les - –í—ã–∫–ª—é—á–∏—Ç—å –ª–µ—Å',
                    '#enable_corovan - –í–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#disable_corovan - –í—ã–∫–ª—é—á–∏—Ç—å –∫–æ—Ä–æ–≤–∞–Ω',
                    '#enable_order - –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#disable_order - –í—ã–∫–ª—é—á–∏—Ç—å –ø—Ä–∏–∫–∞–∑—ã',
                    '#enable_auto_def - –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#disable_auto_def - –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ –¥–µ—Ñ',
                    '#status - –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å',
                    '#hero - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ—Ä–æ–µ',
                    '#push_order - –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–∫–∞–∑ ({0})'.format(','.join(orders)),
                    '#order - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞—â–∏—Ç—ã/–∞—Ç–∞–∫–∏ –∑–∞–º–∫–∞',
                    '#log - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ª–æ–≥–∞',
                    '#time - –î–µ–±–∞–≥, —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
                    '#lt_arena - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è –±–∏—Ç–≤–∞ –Ω–∞ –∞—Ä–µ–Ω–µ',
                    '#get_info_diff - –î–µ–±–∞–≥, –ø–æ—Å–ª–µ–¥–Ω—è—è —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥–µ—Ä–æ–µ',
                    '#ping - –î–µ–±–∞–≥, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∂–∏–≤ –ª–∏ –±–æ—Ç',
                    '#goto_arena - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–æ—Ö–æ–¥ –Ω–∞ –∞—Ä–µ–Ω—É'
                ]))

            # –í–∫–ª/–≤—ã–∫–ª –±–æ—Ç–∞
            if text == '#enable_bot':
                bot_enabled = True
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_bot':
                bot_enabled = False
                send_msg(admin_username, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∞—Ä–µ–Ω—ã
            if text == '#enable_arena':
                arena_enabled = True
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω–∞')
            if text == '#disable_arena':
                arena_enabled = False
                send_msg(admin_username, '–ê—Ä–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞')

            # –í–∫–ª/–≤—ã–∫–ª –ª–µ—Å–∞
            if text == '#enable_les':
                les_enabled = True
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_les':
                les_enabled = False
                send_msg(admin_username, '–õ–µ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ—Ä–æ–≤–∞–Ω–∞
            if text == '#enable_corovan':
                corovan_enabled = True
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            if text == '#disable_corovan':
                corovan_enabled = False
                send_msg(admin_username, '–ö–æ—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∫–æ–º–∞–Ω–¥
            if text == '#enable_order':
                order_enabled = True
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω—ã')
            if text == '#disable_order':
                order_enabled = False
                send_msg(admin_username, '–ü—Ä–∏–∫–∞–∑—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω—ã')

            # –í–∫–ª/–≤—ã–∫–ª –∞–≤—Ç–æ –¥–µ—Ñ
            if text == '#enable_auto_def':
                auto_def_enabled = True
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–µ–Ω')
            if text == '#disable_auto_def':
                auto_def_enabled = False
                send_msg(admin_username, '–ê–≤—Ç–æ –¥–µ—Ñ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω')

            # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            if text == '#status':
                send_msg(admin_username, '\n'.join([
                    '–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω: {0}',
                    '–ê—Ä–µ–Ω–∞ –≤–∫–ª—é—á–µ–Ω–∞: {1}',
                    '–õ–µ—Å –≤–∫–ª—é—á–µ–Ω: {2}',
                    '–ö–æ—Ä–æ–≤–∞–Ω—ã –≤–∫–ª—é—á–µ–Ω—ã: {3}',
                    '–ü—Ä–∏–∫–∞–∑—ã –≤–∫–ª—é—á–µ–Ω—ã: {4}',
                    '–ê–≤—Ç–æ –¥–µ—Ñ –≤–∫–ª—é—á–µ–Ω: {5}',
                ]).format(bot_enabled, arena_enabled, les_enabled, corovan_enabled, order_enabled, auto_def_enabled))

            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ—Ä–æ–µ
            if text == '#hero':
                fwd(admin_username, hero_message_id)

            # –ü–æ–ª—É—á–∏—Ç—å –ª–æ–≥
            if text == '#log':
                send_msg(admin_username, '\n'.join(log_list))
                log_list.clear()

            if text == '#lt_arena':
                send_msg(admin_username, str(lt_arena))

            if text == '#order':
                text_date = datetime.datetime.fromtimestamp(current_order['time']).strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, current_order['order'] + ' ' + text_date)

            if text == '#time':
                text_date = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                send_msg(admin_username, text_date)

            if text == '#ping':
                send_msg(admin_username, '#pong')

            if text == '#get_info_diff':
                send_msg(admin_username, str(get_info_diff))

            if text.startswith('#push_order'):
                command = text.split(' ')[1]
                if command in orders:
                    update_order(orders[command])
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
                else:
                    send_msg(admin_username, '–ö–æ–º–∞–Ω–¥–∞ ' + command + ' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞')

            if text.startswith('#goto_arena'):
                action_list.append('üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')


def send_msg(to, message):
    sender.send_msg('@' + to, message)


def fwd(to, message_id):
    sender.fwd('@' + to, message_id)


def update_order(order):
    current_order['order'] = order
    current_order['time'] = time()
    if order == castle:
        action_list.append(orders['cover'])
    else:
        action_list.append(orders['attack'])
    action_list.append(order)


def log(text):
    message = '{0:%Y-%m-%d %H:%M:%S}'.format(datetime.datetime.now()) + ' ' + text
    print(message)
    log_list.append(message)


def gotoArena():
    action_list.append('üîé–ü–æ–∏—Å–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞')


def doArena(text):
    global lt_arena
    global rival_name
    global arena_log
    global arena_enemy_attack

    if '–°–æ–ø–µ—Ä–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω.' in text:
        arena_log = ArenaLog()
        rival_name = text.partition('- ')[-1].partition('.')[0]
        log('–ù–∏–∫ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞: ' + rival_name)
        arena_log.addAttack(arena_attack[1])
        arena_log.addCover(arena_cover[2])

        action_list.append(arena_attack[1])
        action_list.append(arena_cover[2])
        return

    if '–≤—ã–±–µ—Ä–∏ —Ç–æ—á–∫—É –∞—Ç–∞–∫–∏ –∏ —Ç–æ—á–∫—É –∑–∞—â–∏—Ç—ã' in text:
        if '—É–¥–∞—Ä' in text:
            enemy_attack = re.search(rival_name + '.*—É–¥–∞—Ä ([–∞-—è ]+) (?: -|,)', text)
            arena_enemy_attack.append(arena_attack_strings.index(enemy_attack.group(1)))
        lt_arena = time()
        attack_chosen = gen_arena_attack(arena_log)
        cover_chosen = gen_arena_cover(arena_log)
        log('–ê—Ç–∞–∫–∞: {0}, –ó–∞—â–∏—Ç–∞: {1}'.format(attack_chosen, cover_chosen))
        arena_log.addAttack(attack_chosen)
        arena_log.addCover(cover_chosen)

        action_list.append(attack_chosen)
        action_list.append(cover_chosen)

    if '–ü–æ–±–µ–¥–∏–ª –≤–æ–∏–Ω' in text:
        log('–ü–æ–±–µ–¥–∏–ª –≤–æ–∏–Ω')
        arena_log.results()
        Timer(3600 + random.randint(15, 120), gotoArena).start()
        rival_name = ''
        if len(arena_enemy_attack):
            with open(arena_attack_log_file, 'a') as arena_attack_log:
                string = ','.join(str(ae) for ae in arena_enemy_attack) + ';'
                arena_attack_log.write(string)
            arena_enemy_attack = []


def gen_arena_attack(arena_log):
    attack_chosen = arena_attack[random.randint(0, 2)]
    if arena_log.validateAttack(attack_chosen):
        return attack_chosen
    else:
        return gen_arena_attack(arena_log)


def gen_arena_cover(arena_log):
        cover_chosen = arena_cover[random.randint(0, 2)]
        if arena_log.validateCover(cover_chosen):
            return cover_chosen
        else:
            return gen_arena_cover(arena_log)



if __name__ == '__main__':
    receiver = Receiver(sock=socket_path) if socket_path else Receiver(port=port)
    receiver.start()  # start the Connector.
    _thread.start_new_thread(queue_worker, ())
    receiver.message(work_with_message(receiver))
    receiver.stop()
